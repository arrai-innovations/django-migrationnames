# Generated by Django 4.2.21 on 2025-09-11 22:17
import django.utils.timezone
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    initial = True

    replaces = [
        ("users", "0001_initial"),
        ("users", "0002_users"),
        ("users", "0003_users"),
        ("users", "0004_users"),
        ("users", "0005_users"),
        ("users", "0006_users"),
        ("users", "0007_users_2"),
        ("users", "0007_users"),
        ("users", "0008_users"),
        ("users", "0009_users"),
        ("users", "0010_users"),
        ("users", "0011_users"),
        ("users", "0012_users"),
        ("users", "0013_users"),
        ("users", "0014_users"),
        ("users", "0015_users"),
        ("users", "0016_users"),
        ("users", "0017_users"),
        ("users", "0018_users"),
        ("users", "0019_users_2"),
        ("users", "0019_users"),
        ("users", "0020_users"),
        ("users", "0021_users"),
        ("users", "0022_users"),
        ("users", "0023_users"),
        ("users", "0024_users"),
        ("users", "0025_users_2"),
        ("users", "0025_users"),
        ("users", "0026_users"),
        ("users", "0027_users"),
        ("users", "0028_users"),
        ("users", "0029_users"),
        ("users", "0030_users"),
        ("users", "0031_users"),
        ("users", "0032_users"),
        ("users", "0033_users"),
        ("users", "0034_users"),
        ("users", "0035_users"),
        ("users", "0036_users"),
        (
            "users",
            "0037_users",
        ),
        ("users", "0038_users"),
        ("users", "0039_users"),
        ("users", "0040_users"),
        ("users", "0041_users"),
        ("users", "0042_users"),
        ("users", "0043_users"),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    run_before = [
        ("app_one", "0001_squashed_initial"),
        ("app_two", "0001_squashed_initial"),
        ("app_three", "0001_squashed_initial"),
        ("app_four", "0001_squashed_initial"),
        ("app_five", "0001_squashed_initial"),
        ("app_six", "0001_squashed_initial"),
        ("app_seven", "0001_squashed_initial"),
        ("app_eight", "0001_squashed_initial"),
        ("app_nine", "0001_squashed_initial"),
        ("app_ten", "0001_squashed_initial"),
        ("app_eleven", "0001_squashed_initial"),
        ("app_twelve", "0001_squashed_initial"),
        ("app_thirteen", "0001_squashed_initial"),
        ("app_fourteen", "0001_squashed_initial"),
        ("app_fifteen", "0001_squashed_initial"),
        ("app_seventeen", "0001_squashed_initial"),
        ("app_eighteen", "0001_squashed_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_collation="case_insensitive",
                        max_length=254,
                        unique=True,
                        verbose_name="field_eight address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff field_eleven",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ("email",),
            },
        ),
    ]
